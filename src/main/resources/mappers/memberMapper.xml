<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.bcc.mapper.memberMapper">
  
  	<select id="getNow" resultType="string">
  		select now() 
  	</select>
  	
  	<insert id="putPay" parameterType="PreOrderVO">
		insert into premium_order
		values (#{id},systimestamp,systdate+30,sysdate+29,#{pm})
	</insert>
	
    <select id="getCountMember" resultType="int">
      select count(*) from bcc_member
    </select>
    
    <insert id="putInsertMember">
    	insert into bcc_member (id, pw, name, email, tel, zip, address1, address2) 
    	values(#{id}, #{pw}, #{name}, #{email}, #{tel}, #{zip}, #{address1}, #{address2})    
    </insert>
    
    <select id="getLogin" resultType="com.bcc.domain.MemberVO">
        select * from bcc_member 
        where id=#{id} and pw=#{pw}
    </select>
    
    <update id="modMember">
       update bcc_member 
       set email=#{email}, pw=#{pw}, tel=#{tel}
       where id=#{id}
    </update>
    
    <delete id="delMember">
      delete from bcc_member 
      where id=#{id} and pw=#{pw}
    </delete>
    
	<insert id="putStorageMember" parameterType="MemberVO">
		insert into bcc_storage
		select * from bcc_member
        where id = #{id }
	</insert>
    
	<select id="getMember" resultType="com.bcc.domain.MemberVO">
		select * from bcc_member 
		where id = #{id}
	</select>
	
	<select id="getMemberList" resultType="MemberVO">
	  select * from bcc_member 
	  where id != #{id}	
	</select>
	
	<select id="getIdCheck" parameterType="String" resultType="int">
		select count(id) 
		from bcc_member 
		where id = #{id}
    </select>

	<update id="modLicenseUp">
		update bcc_member
		set license=1
		where id=#{id} 
	</update>
	
	<update id="modLicenseDown">
		update bcc_member
		set license=0
		where id=#{id} 
	</update>

	<select id="getThumbList" resultType="BoardVO">
        select tourist_spot.*
		from tourist_spot left join thumb
		on tourist_spot.num = thumb.b_num and tourist_spot.t_category = thumb.b_category
        where thumb.m_id=#{id }
		order by tourist_spot.num asc
	</select>
	
    <delete id="delThumb" parameterType="int">
		delete from thumb
		where b_num = #{b_num}
    </delete>
	
	<!-- 카카오 로그인 -->
	<!-- 정보 찾기 -->
	<select id="getFindKakao" parameterType="java.util.HashMap" resultType="KakaoVO">
		select * from kakao_table
		where k_name=#{nickname} and k_email=#{email}
	</select>

	<!-- 정보 저장 -->
	<insert id="putKakaoInsert" parameterType="java.util.HashMap">
		insert into kakao_table(k_name, k_email)
		values(#{nickname}, #{email})
	</insert>
	<!-- 카카오 로그인 -->
	
	<!-- 네이버 로그인 -->
	<!-- 정보 찾기 -->
	<select id="getFindNaver" parameterType="java.util.HashMap" resultType="NaverVO">
		select * from naver_table
		where n_name=#{nickname} and n_email=#{email}
	</select>

	<!-- 정보 저장 -->
	<insert id="putNaverInsert" parameterType="java.util.HashMap">
		insert into naver_table(n_name, n_email)
		values(#{nickname}, #{email})
	</insert>
	<!-- 네이버 로그인 -->
	
  </mapper>
  